pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "saivamshi1432/survey-webpage" // Full Docker Hub image name
        DOCKER_TAG = "${DOCKER_IMAGE}:${BUILD_NUMBER}" // Tag the image with build number
        DOCKER_REGISTRY = "https://index.docker.io/v1/" // DockerHub registry URL
        KUBE_CONTEXT = "arn:aws:eks:us-east-1:717279734829:cluster/cs645-cluster"
        KUBE_NAMESPACE = "default" // e.g., default or app-specific namespace
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_TAG}")
                }
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                script {
                    docker.withRegistry(DOCKER_REGISTRY, 'dockerhub-cred') {
                        docker.image("${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Set the Kubernetes context (needed for kubectl to access EKS cluster)
                    sh "kubectl config use-context ${KUBE_CONTEXT}"

                    // Apply Kubernetes configuration file to update the deployment
                    sh """
                    kubectl set image deployment/your-deployment-name your-container=${DOCKER_TAG} -n ${KUBE_NAMESPACE}
                    kubectl rollout status deployment/your-deployment-name -n ${KUBE_NAMESPACE}
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clean up workspace
        }
    }
}
