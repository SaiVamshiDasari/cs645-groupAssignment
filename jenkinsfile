pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "saivamshi1432/survey-webpage"
        DOCKER_TAG = "${DOCKER_IMAGE}:${BUILD_NUMBER}"
        DOCKER_REGISTRY = "https://index.docker.io/v1/"
        KUBE_CONTEXT = "arn:aws:eks:us-east-1:717279734829:cluster/cs645-cluster"
        KUBE_NAMESPACE = "default"
        KUBECONFIG = "/var/lib/jenkins/.kube/config"  // Explicit path to kubeconfig
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_TAG}")
                }
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                script {
                    docker.withRegistry(DOCKER_REGISTRY, 'dockerhub-cred') {
                        docker.image("${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Export AWS token to be used by kubectl
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials-id']]) {
                        sh '''
                        export TOKEN=$(aws eks get-token --region us-east-1 --cluster-name cs645-cluster | jq -r '.status.token')
                        kubectl config set-credentials eks-user --token=$TOKEN
                        kubectl config use-context ${KUBE_CONTEXT}

                        kubectl set image deployment/your-deployment-name your-container=${DOCKER_TAG} -n ${KUBE_NAMESPACE}
                        kubectl rollout status deployment/your-deployment-name -n ${KUBE_NAMESPACE}
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Clean up workspace
        }
    }
}
